#GETTING NODES AND EDGES
nodes <-read.csv(file.choose(),header = T, as.is = T)
#Media example nodes
edges <-read.csv(file.choose(),header = T, as.is = T)
#media example edges
head(nodes)
head(edges)
g<-graph.data.frame(g-edges,directed = T, vertices = nodes)
plot(g)

#degree
degree(g)
g<- graph.formula(1-+2,1-+3,2++3)
plot(g)

# Reciprocity
reciprocity(g)
dyad.census(g)
2*dyad.census(g)$mut/ecount(g)


#Transitivity
kite<-graph.famous("Krackhardt_kite")
atri<-adjacent.triangles(kite)
plot(kite, vertex.label=atri)
transitivity(kite, type="local")
adjacent.triangles(kite)/(degree(kite)*(degree(kite)-1)/2)


#Centralization
centralization.degree(g,mode ="in",normalized = T)
closeness(g,mode = "all",weights=NA)
centralization.closeness(g,mode="all",normalized=T)
betweenness(g,directed = T,weights=NA)
edge.betweenness(g,directed=T,weights=NA)
centralization.betweenness(g,directed=T,normalized=T)

# Eigenvector
centralization.evcent(g, directed = TRUE, normalized = TRUE)

# Cluster
g2 <- barabasi.game(50, p = 2, directed = FALSE)
g1 <- watts.strogatz.game(1, size = 100, nei = 5, p = 0.05)
g <- graph.union(g1, g2)
g <- simplify(g)
ebc <- edge.betweenness.community(g, directed = FALSE)
mods <- sapply(0:ecount(g), function(i) {
  g2 <- delete_edges(g, ebc$removed.edges[seq(length = i)])
  c1 <- clusters(g2)$membership
})
plot(mods, pch = 20)
